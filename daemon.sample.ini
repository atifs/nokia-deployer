# Copyright (C) 2016 Nokia Corporation and/or its subsidiary(-ies).
[integration]
# Python module providing integration between your environment and the deployer
# As long as this module is importable by the deployer, it can live anywhere on your system.
# See the deployment.integrationexample.integration.Dummy module code for documentation
provider=deployment.integrationexample.integration.Dummy


[general]
# Path where the deployer will clone the Git repositories to deploy
local_repo_path=/home/deploy/git_deploy

# In addition to per-repository notification mail, the deployer will send a mail about each deployment to these addresses (comma-separated)
notify_mails=sysadmins@example.com,developers@example.com

# The deployer needs a Beanstalkd queue to enqueue deployment jobs. This can be a locally running queue, and you don't have to use the same queue for several instances, nor do you need to persist the queue (this dependency should be removed in the future). The port is currenly hardcoded and set to 11300.
beanstalk_host=127.0.0.1

# User and password to use to connect to the HAProxy admin. Required even if you don't use HAProxy, just put dummy values here in that case.
haproxy_user=admin
haproxy_pass=password

# Graphite server information
# The deployer will send events under the form "{environment}.deploy.{repository},", for instance "prod.deploy.awesomeproject".
carbon_host=0.0.0.0
carbon_port=2013

# Path to the log file. You will need to manually logrotate this file.
log_file=/var/log/deploy.log

# Deprecated. You can protect some API paths using a token that the client must provide under the header "X-Auth-Token". This will be removed in a future release.
auth_token=mytoken
token_protected_paths=[]

# On which port the webserver will be listening. Currenly, there is no option to listen on a specific interface.
# The deployer will also listen on the port 9000 for websockets.
# Listening on ports under 1000 will require root privileges or the 'cap_net_bind_service' capability.
port=80

[mail]
# Mail transfer agent to use for outgoing mail.
mta=mta.corp.withings.com

# Sender (From: field) of mails sent by the deployer.
sender=deploy@withings.com

[cluster]
# Options for fault tolerance.
# You can deploy several deployer instances behind a HTTP load balancer (LBA). You will need to load balance websockets connections (port 9000) too.

# Endpoint for this instance (direct URL, not through the LBA)
this_deployer_url=http://localhost:80

# List of all the deployer endpoints  (direct URLs, not through the LBA)
deployers_urls=http://deploy1.example.com:80,http://deploy2.example.com:80

# Each deployer instance must have an user in the deployer DB 
# with the permission "deployer"
this_deployer_username=deployer1
this_deployer_token=deployer1_super_secret_token

[database]
# SQLALchemy connection string (http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls
connection=mysql://root:root@localhost/deploy
